name: Helm Chart version Update using updatecli

on:
  push:
    branches:
      - main   # Adjust to the branch you want to trigger this on
  pull_request:
    branches:
      - main  # Adjust to the branch you want to trigger this on
  schedule:
    - cron: "0 0 * * 1"  # Run every Monday at midnight UTC

env:
  UPDATE_NEEDED: 'false'

jobs:
  helm-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependencies jq yq
        run: |
          sudo apt-get update -y
          sudo apt-get install jq -y
          sudo apt-get install yq -y
          sudo apt-get install yq -y
          pip install -r requirements.txt
          sudo apt-get install updatecli -y

      - name: Check and Update Helm chart versions
        run: |
          # Extract charts from JSON
          charts=$(jq -c '.charts[]' .github/chart.json)

          for chart in $charts; do

              chart_name_json=$(echo "$chart" | jq -r '.chart')
              variable=$(echo "$chart" | jq -r '.tf_version_var_name')
  
              # Read chart names from helmchart.yaml
              charts=$(yq eval '.charts[].chart' .github/config/chart.yaml)

          
              for chart in $charts; do

                repository=$(yq eval ".charts[] | select(.chart == \"$chart\") | .repository" .github/config/chart.yaml)
                chart_name_yaml=$(yq eval ".charts[] | select(.chart == \"$chart\") | .chart" .github/config/chart.yaml)
                
                if [ "$chart_name_json" == "chart_name_yaml"]; then 
                    sed -i '/"'$chart_name_json'"/{n;s/"name: NAME"/"name: '$chart_name_json'"/}' .github/updatecli.yaml
                    sed -i '/"'$variable'"/{n;s/"url: URL"/"url: '$repository'"/}' github/updatecli.yaml
                    sed -i '/"'$'"/{n;s/".VAR_NAME."/"url: '$variable'"/}' github/updatecli.yaml
                    sed -i '/"'$'"/{n;s/"SOURCE"/"'$chart_name_yaml'"/}' github/updatecli.yaml
                fi
              done

              updatecli apply --config .github/updatecli.yaml
              

              # Debug: Show input.tf after update
              echo "input.tf after update:"
              cat Template/EKS/input.tf

              #Configure Git
              git config --global user.name 'github-actions[bot]'
              git config --global user.email 'github-actions[bot]@users.noreply.github.com'

              # Create a new branch for the update
              git checkout -b "update-helm-version-$chart_name_json"

              # Stage and commit changes
              git add  Template/EKS/input.tf
              git commit -m "Update Helm chart version for $chart_name_json to $latest_version"
              git push origin HEAD:"update-helm-version-$chart_name_json"

              # Extract the commit hash for the push
              COMMIT_HASH=$(git rev-parse HEAD)

              # Create a pull request using GitHub REST API
              curl -ss -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/${{ github.repository }}/pulls \
                -d '{
                  "title": "Update Helm chart version for '"$chart_name_json"'",
                  "body": "This PR updates Helm chart '"$chart_name_json"' version to '"$latest_version"'.",
                  "head": "update-helm-version-'$chart_name_json'",
                  "base": "optimized"
                }'

              # Reset the repository to the original state
              git reset --hard origin/optimized


              else
                  echo "No update needed for $chart_name_json. Current version: $version"
              fi
          done




